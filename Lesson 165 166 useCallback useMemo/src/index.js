import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

import 'bootstrap/dist/css/bootstrap.min.css';

// хуки появились в реакте начиная с версии 16.8
// если говорить просто то хуки это функции каторые позволяют делать то же что было в классах только внутри функциональных компанентов
// это функции внутри функций
// работа с состояние с методами жизненного цикла с рефами всё это можно реализовать на хуках
// за исключением нескольких методов жизненного цикла getSnapshotBeforeUpdate, getDerivedStateFromError и componentDidCatch
// ни их планируют добавить

// зачем вообще нужны эти хуки
// при разработке бпольшого приложения на классах оно довольно часто сильно усложняется целой кучей обёрток и сложных конструкций
// при помощи хуков код становится немного проще в плане организации

// так же небольшая проблема в самих классах и контексте вызыва
// с функциональными компанентами всё проще это обычные фугкции в каторых есть другие функции, переменные и тд. контекста вызыва там нет
// да и классовый компонент долше писать кода больше чем в функциональном
// с технической стороны тоже есть некаторые проблемы на уровне оптимизации классы чуть хуе минифицируются и внутренности компанентов
// станут чуть проще в плане работы с жизненным циклом вместо множество методов использоуется один хук например
// и с передачей состояния из комапанентов в копаненты тоже проще

// общие правила работы с хуками
// 1 хуки следует вызывать только на верхнем уровне, нельзя вызывать хуки внутри циклов, условий или вложенных функций
// 2 хуки следует вызывать только из функциональных компанентов реакта

ReactDOM.render(
    <App/>,
  document.getElementById('root')
);


