{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,qFAAqF;AACrF;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,+CAA+C;AAC/C;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,qFAAqF;AACrF;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,6BAA6B;AAC7B,yCAAyC;AACzC,8BAA8B,iCAAiC,OAAO;AACtE;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC;AACjE;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,4BAA4B;AAC5B;AACA,kBAAkB;AAClB;AACA,UAAU;AACV;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kFAAkF;AAClF;AACA,6BAA6B;AAC7B,kDAAkD;AAClD;AACA,sEAAsE,KAAK;AAC3E;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,wBAAwB;AACxB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,uDAAuD;AACvD,4BAA4B;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C,iDAAiD;AACjD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,YAAY;AACZ,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,mEAAmE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kBAAkB,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO,MAAM;AAClE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO,MAAM;AAClE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;ACnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UClEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n\r\n    // Calc\r\n    \r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n    // let sex = 'female', \r\n    // height, weight, age, \r\n    // ratio = 1.375;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', '1.375');\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elemets = document.querySelectorAll(selector);\r\n\r\n        elemets.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '...';\r\n            return; // такой прием используется что бы досрочно прервать функцию\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n            // Math.round округляет до ближайшего целого\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elemets = document.querySelectorAll(selector); // получаем все дивы внутри родителя parentSelector\r\n\r\n        elemets.forEach(elem => {\r\n            elem.addEventListener('click', (e) => { // делегируем события на все дивы\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio'); \r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                console.log(ratio, sex);\r\n    \r\n                elemets.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n\r\n        // document.querySelector(parentSelector).addEventListener('click', (e) => { // делегируем события на все дивы\r\n        //     if (e.target.getAttribute('data-ratio')) {\r\n        //         ratio = +e.target.getAttribute('data-ratio'); \r\n        //     } else {\r\n        //         sex = e.target.getAttribute('id');\r\n        //     }\r\n\r\n        //     console.log(ratio, sex);\r\n\r\n        //     elemets.forEach(elem => {\r\n        //         elem.classList.remove(activeClass);\r\n        //     });\r\n\r\n        //     e.target.classList.add(activeClass);\r\n\r\n        //     calcTotal();\r\n        // });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicformation(Selector) {\r\n        const input = document.querySelector(Selector);\r\n\r\n        input.addEventListener('input', () => { // Событие input срабатывает каждый раз при изменении значения.\r\n\r\n            if (input.value.match(/\\D/g)) {    // если пользователь вводит не число\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicformation('#height');\r\n    getDynamicformation('#weight');\r\n    getDynamicformation('#age');\r\n\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n\r\n     // Используем классы для карточек\r\n\r\n     class MenuCard {\r\n        constructor(src, alt, title, descr, price, perentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.perent = document.querySelector(perentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            // console.log(this.classes);\r\n            if(this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className)); // перебираем массив classes и добовляем все классы в нем только что созданному div\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n                \r\n            `;\r\n            this.perent.append(element); // помещаем element внутрь perent\r\n        }\r\n    }\r\n\r\n    // const div = new MenuCard();\r\n    // div.render();\r\n\r\n    const getResource = async (url) => { // так как get запрос объект для отправки не нужен и объект с заголовками тоже\r\n        const res = await fetch(url);\r\n        // если fetch столкнется с какой нибудь ошибкой в Http запросе 404 500 502 и тд. он не выдаст catch (reject)\r\n        // ошибка для него отсутсвие интернета или какие то неполадки на сервере или в самом запросе\r\n        // поэтому такое поведение надо вручную обработать\r\n        // 2 свойства которые есть у промиса который возврощается из fetch\r\n        // .ok это свойство каторое нам дословно говорит что мы что то получили и всё окей либо не окей\r\n        // status выдаёт статус который вернул нам сервер 200 404 500 \r\n\r\n        if (!res.ok) { // !res.ok если что то не так пошло 404 500 502 то сработает блок кода catch (reject)\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`); \r\n            // new Error() объект ошибки в него помещаем текст ошибки каторый нам необходимо выдать\r\n            // оператор throw испиользуется что бы выкинуть ошибку (те ошибки каторые попадают в консоль)\r\n        }\r\n\r\n        return await res.json(); // сдесь тоже не известно сколько метод json() будет переводить возвращённый промис в обычный обект \r\n    };\r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => {   // сюда придёт уже обычный массив с объектами data с сервера \r\n    //         // data.forEach(obj => {  // перебираем массив forEach называем каждый объект в массиве obj\r\n    //         data.forEach(({img, altimg, title, descr, price}) => { // дисктруктуризация объекта вытаскиваем все свойства объекта \r\n    //             // new MenuCard(obj.img, obj.altimg, obj.title, obj.descr, obj.price, '.menu .container').render(); \r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //             // конструктор MenuCard будет создаваться столько раз сколько объектов внутри массива data\r\n    //         });\r\n    //     });\r\n\r\n    // ВТОРОЙ ВАРИАНТ СОЗДАНИЕ ЭЛМЕНТОВ НА СТРАНИЦЕ ДИНАМИЧЕСКИ В СЛУЧАЕ ЕСЛИ НЕ НУЖЕН НИКАКОЙ ШАБЛОН (КЛАСС) ЭЛИМЕНТ СОЗДАЁТСЯ 1 РАЗ\r\n\r\n    // getResource('http://localhost:3000/menu')\r\n    // .then(data => createCard(data, '.menu .container'));\r\n\r\n    // function createCard(data, parent) { // функция будет принимать массив с объектами от сервера \r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         // перебираем массив forEach дисктруктуризация объекта вытаскиваем все свойства объекта\r\n    //         const element = document.createElement('div');\r\n    //         element.classList.add('menu__item');\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n                \r\n    //         `;\r\n\r\n    //         document.querySelector(parent).append(element);\r\n    //     });\r\n    // }\r\n\r\n    axios.get('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n            console.log(data);\r\n        });\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     '.menu .container',\r\n    // ).render();\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/elite.jpg\",\r\n    //     \"elite\",\r\n    //     'Меню “Премиум”',\r\n    //     'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!',\r\n    //     11,\r\n    //     '.menu .container',\r\n    //     'menu__item',\r\n    // ).render();\r\n\r\n    // new MenuCard(\r\n    //     \"img/tabs/post.jpg\",\r\n    //     \"post\",\r\n    //     'Меню \"Постное\"',\r\n    //     'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.',\r\n    //     17,\r\n    //     '.menu .container',\r\n    //     'menu__item',\r\n    // ).render();\r\n    \r\n\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n\r\n     // Forms\r\n\r\n     const forms = document.querySelectorAll('form');\r\n\r\n     const message = {\r\n         loading: 'img/form/spinner.svg',\r\n         success: 'Спасибо! Скоро мы с вами свяжемся',\r\n         failure: 'Что-то пошло не так...'\r\n     }\r\n \r\n     forms.forEach(item => {\r\n         baindPostData(item);\r\n     });\r\n \r\n     // операторы Async/Await всегда используются в паре\r\n     // async значит что внутри функции будет какой то асинхронный код\r\n     // await ставится перед теми опрециями именно которых необходимо дождаться (по стандарту 30 с.)\r\n     const postData = async (url, data) => {\r\n         const res = await fetch(url, {  // в переменную res мы помещаем промис который возврощается от fetch()\r\n             // await код будет ждать результата запроса от сервера которую поместит в переменную\r\n             method: 'POST',\r\n                 headers: { // если отправлять формат json\r\n                     'Content-type': 'application/json'\r\n                 },\r\n                 body: data\r\n         });\r\n \r\n         return await res.json(); // сдесь тоже не известно сколько метод json() будет переводить возвращённый промис в обычный обект \r\n     };\r\n \r\n     function baindPostData (form) {\r\n         form.addEventListener('submit', (e) => {\r\n             // событие submit срабатывает когда мы пытаемся отправить форму нажатием Enter или кнопки с type=\"submit \r\n             e.preventDefault(); // отменяем стандартное поведение браузера\r\n \r\n             const statusMessage = document.createElement('img');\r\n             // statusMessage.classList.add('status');\r\n             statusMessage.src = message.loading;\r\n             // statusMessage.style.cssText = `\r\n             //     display: block;\r\n             //     magrin: 0 auto;\r\n             // `;\r\n             statusMessage.classList.add('spinner');\r\n             // form.append(statusMessage);\r\n             form.insertAdjacentElement('afterend', statusMessage);\r\n             // insertAdjacentElement('') вставляет элимент на сраницу принимает 2 аргумента\r\n             // afterend вставляем не в саму форму а после после формы\r\n             // какой элимент вставляем\r\n \r\n             // const request = new XMLHttpRequest();\r\n             // request.open('POST', 'server.php');\r\n             // request.setRequestHeader('Content-type', 'multipart/form-data'); // заголовок для FormData\r\n             // !!!!когда используется FormData и объект XMLHttpRequest() заголовок прописывать не нужно\r\n \r\n             // если сервер должен принимать файлы в формате json то заголовок уже нужен\r\n             // request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n \r\n             const formData = new FormData(form); \r\n             \r\n             // const object = {};\r\n             // formData.forEach(function(value, key) {\r\n             //     object[key] = value;\r\n             // });\r\n \r\n             const json = JSON.stringify(Object.fromEntries(formData.entries())); // переводим объект formData в формат JSON\r\n \r\n             // const obj = {a: 23, b: 50};\r\n             // console.log(Object.entries(obj)); // [ [ 'a', 23 ], [ 'b', 50 ] ]\r\n             // // метод Object.entries(obj) возврощает массив собственных перечисляемых свойств указанного объекта\r\n             // console.log(Object.fromEntries(Object.entries(obj))); // { a: 23, b: 50 }\r\n             // // Object.fromEntries() возвращает из матрици массивов обычный объект\r\n \r\n             // fetch('server.php', {\r\n             //     method: 'POST',\r\n             //     // headers: { // если отправлять формат json\r\n             //     //     'Content-type': 'application/json'\r\n             //     // },\r\n             //     body: formData\r\n             // })\r\n             // postData('http://localhost:3000/requests', JSON.stringify(object))\r\n             // .then(data => data.text()) // переводим ответ от сервера в нормальный формат\r\n             postData('http://localhost:3000/requests', json)\r\n             .then(data => {\r\n                 console.log(data); // data то что вернул сервер\r\n                 showThanksModal(message.success);\r\n                 statusMessage.remove();\r\n             }).catch(() => {\r\n                 showThanksModal(message.failure);\r\n             }).finally(() => {\r\n                 form.reset();\r\n             });\r\n             // FormData() это объект который собирает данные с формы для отправки на сервер в формате ключ - значение\r\n             // Важно что бы в инпутах формы был указан атрибут name иначе FormData не может найти этот инпут и взять с него value\r\n \r\n             // FormData нельзя перегнать одним методом в формат json\r\n             // передаём все данные с FormData в объект object\r\n             // const object = {};\r\n             // formData.forEach(function(value, key) {\r\n             //     object[key] = value;\r\n             // });\r\n \r\n             // const json = JSON.stringify(object); // переводим обычный объект в формат JSON\r\n \r\n             // request.send(formData); // так как POST в метод send передаём аргумент body = formData\r\n             // request.send(json);\r\n \r\n             // request.addEventListener('load', () => {\r\n             //     if (request.status === 200) {\r\n             //         console.log(request.response);\r\n             //         showThanksModal(message.success);\r\n             //         // statusMessage.textContent = message.success;\r\n             //         form.reset(); // очищаем форму\r\n             //         // setTimeout(() => {\r\n             //         //     statusMessage.remove(); // удаляем сообщение\r\n             //         // }, 2000);\r\n             //         statusMessage.remove();\r\n             //     } else {\r\n             //         // statusMessage.textContent = message.failure;\r\n             //         showThanksModal(message.failure);\r\n             //     }\r\n             // });\r\n         });\r\n     }\r\n \r\n     function showThanksModal(message) {\r\n         const prevModalDialog = document.querySelector('.modal__dialog');\r\n \r\n         prevModalDialog.classList.add('hide');\r\n         openModal();\r\n \r\n         const thanksModal = document.createElement('div');\r\n         thanksModal.classList.add('modal__dialog');\r\n         thanksModal.innerHTML = `\r\n         <div class=\"modal__content\">\r\n             <div class=\"modal__close\" data-close=\"\">×</div>\r\n             <div class=\"modal__title\">${message}</div>\r\n         </div>\r\n         `;\r\n \r\n         document.querySelector('.modal').append(thanksModal);\r\n         setTimeout(() => {\r\n             thanksModal.remove();\r\n             prevModalDialog.classList.add('show');\r\n             prevModalDialog.classList.remove('hide');\r\n             closeModal();\r\n         }, 4000);\r\n     }\r\n \r\n     // API Application Programming Interface — «программный интерфейс приложения» готовые методы и свойства\r\n     // набор данных и возможностей которое предостовляет нам какое то готове решение\r\n     // DOM API - различные методы которые позволяют нам работать на странице\r\n     // Fetch API // технология встроенная в браузер которая позволяет общаться с сервером построена на промисах\r\n \r\n     // fetch()\r\n     // можно было бы создать в проекте файл json куда отправлять запросы\r\n     // jsonplaceholder небольшая база данных в формате json к которой можно обращаться для тестирования своего приложения\r\n \r\n     fetch('https://jsonplaceholder.typicode.com/todos/1') \r\n     // глобальный метод fetch() который принимает в себя url на который посылается запрос \r\n     // если бльше ничего не указывать то это будет GET запрос\r\n     // метод fetch() промис который обрабатывается при помощи цепочки then\r\n         .then(response => response.json())\r\n         // поолучаем ответ response в формате json, для трансформации в обычный объект обычно используется команда JSON.parse\r\n         // у fetch есть свой метод json() для перевода формата json в обычный объект\r\n         // response.json() возврощает нам промис с обычным объектом который можно использовать например в консоле\r\n         .then(json => console.log(json));\r\n     \r\n     // для других запросов\r\n \r\n     fetch('https://jsonplaceholder.typicode.com/posts', {\r\n         method: \"POST\",                         // запрос\r\n         body: JSON.stringify({name: 'Alex'}),   // то что будем отправлять stringify() переводит объект в формат(JSON)\r\n         headers: {                              // заголовки в множественном числе\r\n             'Content-type': 'application/json'\r\n         }\r\n     })\r\n     .then(response => response.json())\r\n     .then(json => console.log(json));\r\n \r\n \r\n \r\n     //_______________________________________________________\r\n \r\n     // Lesson 89\r\n \r\n     // в самом начале курса мы установили окружение Node.js\r\n     // оно позволяет работать не только с бекэндом написаном на Node.js\r\n     // но и использовать пакетный мененджер npm\r\n     // npm пакеты это кусочки кода которые лежат на отдельныых серверах и которые мы можем устанавливать себе в проект\r\n     // npm пакеты наприер Gulp browsersync и тд.\r\n     // Обычно в реальны проектах будет установлено много различных пакетов npm\r\n     // прежде чем устанавливать npm пакеты мы должны нашей системе сказать что этот проект будет содержать npm пакеты \r\n     // тоесть он будет npm проектом, сделать это нужно что бы наша система чётко знала какет пакте содержит проект какая версия и тд.\r\n     // что бы создать npm проект прописываем в терминале npm init отвечаем на вопросы нажимаем y и всё\r\n     // в проекте появляется файлик package.json с данными из терминала и инофрмацию о пакетах каторые мы установим\r\n     // дальше уже можно устанавливать любые npm пакеты в проект\r\n     // устанавливаем JSON-server npm i json-server можно установить глобально и локально\r\n     // глобально npm i json-server -g занчит он будет работать в любой части нашей сиситемы в любом проекте без установки будет работать \r\n     // будем устанавливать локально npm i json-server именно в этот проект конкретную версию так каждый пользователь будет знать\r\n     // каке пакеты ему надо установить \r\n     // дальше нужно указать флаг который указывает как этот пакет влияет на наш проет\r\n     // используется он только при разработке либо при работе проекта \r\n     // у нас JSON-server будет использоваться толко при разрабтке чтобы тестировать на функционал\r\n     // если пакет используется только при разработке прописываем npm i json-server --save-dev = зависимость для разработки\r\n     // если пакеты используются для работы проекта внутри например библиотеки Jquery React прописываем --save\r\n     // устанавливаем локально npm i json-server --save-dev в package.json появилась зависимость devDependencies это пакеты \r\n     // каторые установлены только для разработки. Пактеы которые будут установлены для работы проекта появятся в поле Dependencies\r\n     // Папка node_modules это непосредственно все пакеты которые установлены в проект НИКОГДА РУКАМИ НЕ ТРОГАЕМ должна быть прописана в gitignore\r\n     // если другой разработчик скачает с гита этот проект там не будет папки node_modules ему просто надо будет прописать в терминале\r\n     // npm i и все пакеты с package.json у него установятся автоматически в папку node_modules\r\n     // package-lock.json прописаны различные пакеты зависимости пути и тд. ТОЖЕ РУКАМИ НЕ ТРОГАЕМ\r\n \r\n     // json-server это простой сервер для работы с json файлами когда мы их используем как маленькую базу данных\r\n     // в нем работает метод POST. Пока что с настоящим бекендом не можем работать но сэмулируем его таким способом\r\n     // что бы запустить прописываем в терминале npx json-server db.json с путем к той базе данных которую мы хотим запустить на сервере\r\n     // получаем Resources несколько путей куда мы можем делаь запросы http://localhost:3000/menu   http://localhost:3000/requests\r\n \r\n     fetch('db.json')                     // обрашаемся к db.json GET запрос, возращается нам промис\r\n         .then(data => data.json())       // переводим пришедший к нам объект data в формате json в обычный объект javaScript\r\n         .then(res => console.log(res));  // res результат который получается перешедший в этот промис\r\n \r\n \r\n \r\n     fetch('http://localhost:3000/menu')  // обрашаемся к db.json через json-server                    \r\n         .then(data1 => data1.json())\r\n         .then(res1 => console.log(res1));  // получаем только один массив из базы даных db.json \r\n \r\n \r\n\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n\r\n     //Modal\r\n\r\n     const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n     modal = document.querySelector('.modal');\r\n    //   modalCloseBtn = document.querySelector('[data-close]');\r\n\r\n    // modalTrigger.forEach(btn => {\r\n    //     btn.addEventListener('click', () => {\r\n    //         // modal.style.display = 'block';\r\n    //         // modal.classList.add('show');\r\n    //         // modal.classList.remove('hide');\r\n    //         // modal.classList.toggle('show');\r\n    //         // document.body.style.overflow = 'hidden'; // запрещаем скролить страницу //\r\n    //     });\r\n    // });\r\n\r\n    modalTrigger.forEach(btn => {\r\n    btn.addEventListener('click', openModal);\r\n    });\r\n\r\n    function openModal () {\r\n    // modal.classList.toggle('show');\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; // запрещаем скролить страницу //\r\n    clearInterval(modalTimerID); // сбрасываем setTimeout(openModal, 3000) //\r\n    }\r\n\r\n    // modalTrigger.addEventListener('click', () => {\r\n    //     // modal.style.display = 'block';\r\n    //     // modal.classList.add('show');\r\n    //     // modal.classList.remove('hide');\r\n    //     modal.classList.toggle('show');\r\n    //     document.body.style.overflow = 'hidden'; // запрещаем скролить страницу //\r\n    // });\r\n\r\n    // modalCloseBtn.addEventListener('click', () => {\r\n    //     // modal.style.display = 'none';\r\n    //     // modal.classList.add('hide');\r\n    //     // modal.classList.remove('show');\r\n    //     modal.classList.toggle('show');\r\n    //     document.body.style.overflow = ''; // разрешаем скролить страницу //\r\n    // });\r\n\r\n    // modalCloseBtn.addEventListener('click', closeModal);\r\n\r\n    // modal.addEventListener('click', (e) => {\r\n    //     if (e.target === modal) {\r\n    //         modal.classList.toggle('show');\r\n    //         document.body.style.overflow = '';\r\n    //     }\r\n    // });\r\n\r\n    modal.addEventListener('click', (e) => {\r\n    if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n        closeModal();\r\n    }\r\n    });\r\n\r\n    function closeModal () {\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    // modal.classList.toggle('show');\r\n    document.body.style.overflow = '';\r\n    }\r\n\r\n    document.addEventListener('keydown', (e) => { // событие нажатия клавиши клавиатуры //\r\n    if (e.code === \"Escape\" && modal.classList.contains('show')) { // e.code отслеживает код клавиши //\r\n        closeModal();\r\n    }\r\n    });\r\n\r\n    const modalTimerID = setTimeout(openModal, 5000);\r\n\r\n    function showModalByScroll () {\r\n    if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) { \r\n        // window.pageYOffset сколько пользователь отлистал страницу сверху //\r\n        // document.documentElement.clientHeight высота видимой части страници //\r\n        // document.documentElement.scrollHeight вся высота страници //\r\n        openModal();\r\n        window.removeEventListener('scroll', showModalByScroll);\r\n    }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);// если добавить {once: true} то даже если немного прокрутить колесико мыши событие сразу удалится //\r\n                                                        // scroll отлавливает когда пользователь скролит страницу //\r\n\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n\r\n    // Slider\r\n\r\n    // const slides = document.querySelectorAll('.offer__slide'),\r\n    //       prev = document.querySelector('.offer__slider-prev'),\r\n    //       next = document.querySelector('.offer__slider-next'),\r\n    //       total = document.querySelector('#total'),\r\n    //       current = document.querySelector('#current');\r\n    // let slideIndex = 1;\r\n\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.classList.add('hide'));\r\n    //     slides.forEach(item => item.classList.remove('show'));\r\n    //     // slides.forEach(item => console.log(item));\r\n    //     slides[slideIndex - 1].classList.add('show');\r\n\r\n    //     // slides.forEach(item => item.style.display = 'none');\r\n\r\n    //     // slides[slideIndex - 1].style.display = 'block';\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides (n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n          slider = document.querySelector('.offer__slider'),\r\n          prev = document.querySelector('.offer__slider-prev'),\r\n          next = document.querySelector('.offer__slider-next'),\r\n          total = document.querySelector('#total'),\r\n          current = document.querySelector('#current'),\r\n          slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n          slidesField = document.querySelector('.offer_slider-inner'),\r\n          width = window.getComputedStyle(slidesWrapper).width; \r\n          // window.getComputedStyle() примененные стили которые идут о css берём только ширину\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden'; // скрываем те элименты которые не влазят в область slidesWrapper\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n    const indicators = document.createElement('ol');\r\n          dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1); \r\n        // setAttribute устанавливает атрибут какой атрибут data-slide-to и чему он равен i + 1\r\n        dot.classList.add('dot');\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot); // помещаем все точки в массив\r\n    }\r\n\r\n    function DeleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n    \r\n    next.addEventListener('click', () => {\r\n        if (offset === DeleteNotDigits(width) * (slides.length - 1)) {\r\n        // if (offset === +width.replace(/\\D/g, '') * (slides.length - 1)) {\r\n        // if (offset === +width.slice(0, width.length - 2) * (slides.length - 1)) { // если это последний слайд\r\n            // в переменной width лежит строка '400px' если наччнём умножать на число получим ошибку\r\n            // метод slice(0, width.length - 2) выводит часть строки со значения первого аргумента до значения второго аргумента\r\n            // берем width.length длину строки в переменной и отимаем две последних буквы чтобы отрезать 'px' \r\n            offset = 0;\r\n        } else {\r\n            // offset += +width.slice(0, width.length - 2);\r\n            // offset += +width.replace(/\\D/g, '');\r\n            offset += DeleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // смещаем slidesField влево на количество пикселей offset\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {  \r\n            // offset = +width.slice(0, width.length - 2) * (slides.length - 1);\r\n            // offset = +width.replace(/\\D/g, '') * (slides.length - 1);\r\n            offset = DeleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            // offset -= +width.slice(0, width.length - 2);\r\n            // offset -= +width.replace(/\\D/g, '');\r\n            offset -= DeleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // смещаем slidesField влево на количество пикселей offset\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to'); \r\n            // getAttribute помещает в переменную slideTo значение атрибута data-slide-to\r\n            slideIndex = slideTo;\r\n            // offset = +width.slice(0, width.length - 2) * (slideTo - 1);\r\n            // offset = +width.replace(/\\D/g, '') * (slideTo - 1);\r\n            offset = DeleteNotDigits(width) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n\r\n    // Tabs\r\n\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n    tabsContent = document.querySelectorAll('.tabcontent'),\r\n    tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabsContent () {\r\n        tabsContent.forEach(item => {\r\n            // item.style.display = 'none';\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabsContent (i = 0) {  // i = 0 параметр по умолчанию если функция вызывается без аргументов то i = 0 // \r\n        // tabsContent[i].style.display = 'block';\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabsContent();\r\n    showTabsContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        \r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabsContent();\r\n                    showTabsContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n\r\n    // Timer\r\n\r\n    // const deadline = '2022-05-05';\r\n    const deadline = new Date('2078-12-17');\r\n    const day = new Date();\r\n    // day.setHours(day.getHours() + (day.getTimezoneOffset()/-60));\r\n    deadline.setFullYear(day.getFullYear());\r\n    deadline.setMonth(day.getMonth());\r\n    deadline.setDate(day.getDate() + 1);\r\n    // console.log(day);\r\n    // console.log(deadline);\r\n\r\n    function getTimeReamining (endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()), // разница между дедлайном и текущем временем //\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)), // Math.floor округляет до целого // (1000 * 60 * 60 * 24) количесвто милисекунд в сутках // получаем сколько дней осталось до дедлайна //\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)), // t / (1000 * 60 * 60) получаем количество часов до дедлайна // % 24 делим на количество часов в сутках и получаем остаток //\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock (selector, endtime) {\r\n        const time = document.querySelector(selector),\r\n              days = time.querySelector('#days'),\r\n              hours = time.querySelector('#hours'),\r\n              minutes = time.querySelector('#minutes'),\r\n              seconds = time.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock (); // запускаем функцию updateClock не дожидаясь 1000 миллисекунд что бы на странице не появлялись цифры с вёрстки\r\n\r\n        function updateClock () {\r\n            const t = getTimeReamining(endtime); // в переменную t помещается объект из функции getTimeReamining //\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours - 3);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const tabs = require('./modules/tabs'),\r\n          modal = require('./modules/modal'),\r\n          timer = require('./modules/timer'),\r\n          cards = require('./modules/cards'),\r\n          calc = require('./modules/calc'),\r\n          forms = require('./modules/forms'),\r\n          slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n});"],"names":[],"sourceRoot":""}