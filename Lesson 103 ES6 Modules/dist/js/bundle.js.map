{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA;AACmC;AACnC;AACA,eAAe,yCAAG,EAAE,MAAM,yCAAG,CAAC,IAAI;AAClC;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU,MAAM,SAAS,IAAI;AAC/C,iBAAiB;AACjB;AACA;AACA;AAC8B;AAC9B,WAAW,kBAAkB,eAAe;AAC5C,oDAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H","sources":["webpack://lesson-102/./src/js/main.js","webpack://lesson-102/webpack/bootstrap","webpack://lesson-102/webpack/runtime/define property getters","webpack://lesson-102/webpack/runtime/hasOwnProperty shorthand","webpack://lesson-102/webpack/runtime/make namespace object","webpack://lesson-102/./src/js/script.js"],"sourcesContent":["'use sctrict'\r\n// модульная структура стандарта ES6 более гибкая\r\n// для того что бы что то экспортровать используем ключевое слово export\r\n// главное передовать в export имя того что мы экспортируем\r\n\r\nexport let one = 1;\r\n\r\nlet two = 2;\r\n\r\nexport {two};\r\n\r\n// export function sayHi() {\r\n//     console.log('Hello');\r\n// }\r\n\r\n// Так же есть экспорт по умолчанию\r\n// экспорт по умолчанию экспорт по умолчанию доджен быть только один!!!\r\nexport default function sayHi() {\r\n    console.log('Hello');\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// что бы ипопртировать что то из другого файла ключевое слово import после слова from прописываем путь откуда импортируем\r\n\r\nimport {one, two} from './main.js';\r\n\r\nconsole.log(`${one} and ${two}`); // после сборки получаем 1 and 2\r\n\r\n// и всёравно все эти файлы нужно собирать каким то сборщиком модулей (webpack)\r\n\r\n// import {one as first} from './main'; \r\n// // когда мы что то импортируем мы можем сразуже переименовать прямо в объявлении используется когда импортируется большое название\r\n// console.log(first);\r\n\r\n// так же можно импортировать всё сразу одним объектом\r\n// и обращаться к переменным или функциям через объект\r\n\r\n// import * as data from './main'; \r\n\r\n// console.log(`${data.one} and ${data.two}`); // после сборки получаем 1 and 2\r\n// data.sayHi(); // после сборки получаем Hello\r\n\r\n// Так же есть импорт по умолчанию\r\n\r\nimport sayHi from './main.js';\r\n// import {default as sayHi} from './main'; // можно и так\r\nsayHi(); // после сборки получаем Hello\r\n\r\n\r\n// так же можно использовать атрибут type=\"module\" к тегу script что бы он пытался отдельно использовать скрипты в качестве модулей\r\n// ПОЛЬЗУЮТСЯ РЕДКО\r\n// для этого должны быть настроены как обычно экспорты импорты\r\n// и правильно подключить на страницу html\r\n// первым должен идти main.js потому что из него идут экспорты а после уже script.js\r\n// это не значит что браузер сможет собрать всё это в один фаил\r\n// он будет последоватьльно подключать эти файлы используя экспорты импорты\r\n// после слова from прописываем путь откуда импортируем с припиской .js\r\n// когда мы подключаем скрипты черз type=\"module\" они работают точно также как и с атрибутом defer\r\n\r\n// Атрибут defer указывает браузеру, что скрипт должен быть выполнен после того, как HTML-документ будет полностью разобран."],"names":[],"sourceRoot":""}