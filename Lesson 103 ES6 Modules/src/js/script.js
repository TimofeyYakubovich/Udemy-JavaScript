// что бы ипопртировать что то из другого файла ключевое слово import после слова from прописываем путь откуда импортируем

import {one, two} from './main.js';

console.log(`${one} and ${two}`); // после сборки получаем 1 and 2

// и всёравно все эти файлы нужно собирать каким то сборщиком модулей (webpack)

// import {one as first} from './main'; 
// // когда мы что то импортируем мы можем сразуже переименовать прямо в объявлении используется когда импортируется большое название
// console.log(first);

// так же можно импортировать всё сразу одним объектом
// и обращаться к переменным или функциям через объект

// import * as data from './main'; 

// console.log(`${data.one} and ${data.two}`); // после сборки получаем 1 and 2
// data.sayHi(); // после сборки получаем Hello

// Так же есть импорт по умолчанию

import sayHi from './main.js';
// import {default as sayHi} from './main'; // можно и так
sayHi(); // после сборки получаем Hello


// так же можно использовать атрибут type="module" к тегу script что бы он пытался отдельно использовать скрипты в качестве модулей
// ПОЛЬЗУЮТСЯ РЕДКО
// для этого должны быть настроены как обычно экспорты импорты
// и правильно подключить на страницу html
// первым должен идти main.js потому что из него идут экспорты а после уже script.js
// это не значит что браузер сможет собрать всё это в один фаил
// он будет последоватьльно подключать эти файлы используя экспорты импорты
// после слова from прописываем путь откуда импортируем с припиской .js
// когда мы подключаем скрипты черз type="module" они работают точно также как и с атрибутом defer

// Атрибут defer указывает браузеру, что скрипт должен быть выполнен после того, как HTML-документ будет полностью разобран.